{"data":{"markdownRemark":{"html":"<h2>Contents</h2>\n<ol>\n<li><a href=\"#about\">Why would I need this?</a></li>\n<li><a href=\"#work\">How does this app work?</a></li>\n<li><a href=\"#run\">How do I run the demo?</a></li>\n</ol>\n<span id=\"about\" />\n<h2>Why would I need this?</h2>\n<p>In <a href=\"../internal-links-a/\">part 1</a> and <a href=\"../internal-links-b/\">part 2</a>,\nwe learned how to create custom links to other pages in our shiny app\nand how to embed links in visualizations. But what if a shiny app uses\nmultiple tabPanels and tabsetPanels? Can we apply the same\nconcept to get to a specifc tab on another page?</p>\n<p>Sort of. Let's dive into this.</p>\n<span id=\"work\"/>\n<h2>How does this work?</h2>\n<p>Using the layout defined in the earlier example, we will expand on it to\ninclude tabsetPanel. We then integrate the customHref function\nto target a specific tab on another page.</p>\n<h3>Building the UI</h3>\n<p>We will build the ui to include a tabsetPanel and assign the\nvalue to each panel like we did in the earlier examples. We will\nalso define the server.</p>\n<pre><code class=\"language-r\"># ui\nui &#x3C;- tagList(\n\n        # head\n        tags$head(\n                tags$script(src=\"func.js\")\n        ),\n\n         # body\n         navbarPage(\n                tabPanel(\"tab 1\", value=\"tab1\",\n                        tags$h1(\"Some Title\"),\n                        tags$a(...)\n                ),\n                tabPanel(\"tab 2\", value=\"tab2\",\n                        tags$h1(\"Some Title\"),\n                        tabsetPanel(\n                                tabPanel(\"subtab a\", value=\"subtabA\"),\n                                tabPanel(\"subtab B\", value=\"subtabB\")\n                        )\n                )\n        )\n)\n\n# server\nserver &#x3C;- function(input,output){}  \n</code></pre>\n<p>Let's take a closer look at the links.</p>\n<h3>Defining the links</h3>\n<p>In code above, we will now fill in the tags$a(). The formula is as\nsame as before: tags$a([text to display], [onclick event]). Try\nsetting our event as with the link to tab A on the second page.</p>\n<pre><code class=\"language-r\"># using tags with js function\ntags$a(\"onclick\"=\"customHref('subtabB');\",\"Go to the second tab on page 2\")\n</code></pre>\n<p>What happens? Nothing.</p>\n<p>In order to move to specific tab on another page, we will make two calls\nto the customHref function. The first call will be to the page where\nthe tab is located and the second is to the tab itself. We will change\nour link to:</p>\n<pre><code class=\"language-r\"># using tags with js function\ntags$a(\"onclick\"=\"customHref('tab2'); customHref('subtabB');\",\"Go to the second tab on page 2\")\n</code></pre>\n<p>Now, set the links to go for other pages. Try adding more pages and more\ntabs. Remember to get to a specific tab, first select the page the tab\nis located on, and the select the tab.</p>\n<span id=\"run\" />\n<h2>How can I run this app?</h2>\n<p>The source code is available on\n<a href=\"https://github.com/davidruvolo51/shinyAppTutorials/tree/master/Internal-Links-Demo\">github</a>.\nAlternatively, you can run the demo in R using the following code.</p>\n<pre><code class=\"language-r\"># Run in R/Rstudio\ninstall.packages(\"shiny\")\nshiny::runGitHub(repo=\"shinyAppTutorials\",username=\"davidruvolo51\",subdir=\"Internal-Links-Demo\")\n</code></pre>","frontmatter":{"title":"Linking Tabs - Part 3","subtitle":"Creating links to specific elements on other pages","abstract":"Okay. I have created custom navigation. What if my app has multiple pages with tabs. How do I go to a specific tab on another page?","date":"2018-08-15","keywords":["javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/internal-links-c/"}}