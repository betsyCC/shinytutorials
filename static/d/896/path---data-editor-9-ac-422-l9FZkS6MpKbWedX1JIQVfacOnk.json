{"data":{"markdownRemark":{"html":"<h2>Contents</h2>\n<ol>\n<li><a href=\"#data-editor-about\">Why would I need this?</a></li>\n<li><a href=\"#data-editor-work\">How does the app work?</a></li>\n<li><a href=\"#data-editor-run\">How can I run the demo?</a></li>\n</ol>\n<span id=\"data-editor-about\"/>\n<h2>Why would I need this?</h2>\n<p>This app was created in order to figure out a question I've had for a\nwhile: \"How can I edit a dataset in a shiny app?\"</p>\n<p>I've developed several shiny apps for the monitoring for small clinical\nstudies and for scientific reporting. In previous situations, I've used\na google form as data entry or I used excel forms to store data locally.\nThese methods are fine and they do the job, but it requires a strong\ndata management plan to ensure none of the data goes missing or gets\noverwritten. This gets really messy if you have multiple people entering\nand editing data.</p>\n<p>A data editor would be useful in the event in this situation. This would\nallow you to keep a master dataset and a historical record of all\nchanges. This would be help if fix typos or other necessary changes\n(e.g., name changes, modifying a value if it was entered incorrectly,\nupdating information, etc.) on the fly rather than editing the master\nfile itself. This would be better than writing guides on how to modify\ndata, how to document changes, or even have an inbox full of data\nmodification requests.</p>\n<p>In this tutorial, we will learn how to build a basic data editor in a\nshiny using the rhandsontable package. Here's a preview of what we\nwill make.</p>\n<p><img src=\"https://raw.githubusercontent.com/davidruvolo51/shinyAppTutorials/master/Data-Editor/data-editor.gif\" alt=\"a recording showing how to edit values in a\ntable\"></p>\n<span id=\"data-editor-work\" />\n<h2>How does the app work?</h2>\n<p>The app was developed with the help of vignettes in the wonderful\nrhandsontable package, various features in the shinyBS and\nshinyJS packages. In this example, we will using the <code>mtcars</code>{.data}\ndataset.</p>\n<p>To make the app work, there's base file <code>cars data.RDS</code>{.file}, which\nis the primary data file (i.e., current).</p>\n<h3>Building the UI</h3>\n<p>First things first - let's setup the ui. We will use a sidebar\nlayout for our app. We also create a set of buttons that will be used\nfor triggering the editor and for saving data. We will define the\nfollowing buttons</p>\n<ul>\n<li>view: button to display the table as is (without editing\nprivileges)</li>\n<li>edit: button to render table as a rhandsontable output</li>\n<li>cancel: button to discard all edits and return back to the\nnormal table</li>\n<li>save: button to save all edits</li>\n<li>refresh: button to refresh the app (pull all changes in to the\ndefault view)</li>\n</ul>\n<p>We will also create two modals. The first modal will be triggered when\nthe save button is clicked and will ask, are you sure you want to\nsave the changes?. If the user clicks yes, then the save function\nwill run. Once the file is saved, a confirmation dialogue will appear\n(all changes were saved) and prompting you to refresh the app to view\nthe changes.</p>\n<p>Here's what our ui looks like.</p>\n<h3>Building the UI</h3>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">ui <span class=\"token operator\">&lt;-</span> shinyUI<span class=\"token punctuation\">(</span>\n\n    fluidPage<span class=\"token punctuation\">(</span>\n        \n        <span class=\"token comment\"># shinyjs</span>\n        useShinyjs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        extendShinyjs<span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"shinyjs.refresh = function(){history.go(0);}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\"># title</span>\n        titlePanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"Data Editor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token comment\"># set layout</span>\n        sidebarLayout<span class=\"token punctuation\">(</span>\n            \n            <span class=\"token comment\"># sidebarpanel</span>\n            sidebarPanel<span class=\"token punctuation\">(</span>\n                \n                <span class=\"token comment\"># text + buttons</span>\n                helpText<span class=\"token punctuation\">(</span><span class=\"token string\">\"What would you like to do?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                actionButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"view\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"view\"</span><span class=\"token punctuation\">,</span> icon <span class=\"token operator\">=</span> icon<span class=\"token punctuation\">(</span><span class=\"token string\">\"binoculars\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                actionButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"edit\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"edit\"</span><span class=\"token punctuation\">,</span> icon <span class=\"token operator\">=</span> icon<span class=\"token punctuation\">(</span><span class=\"token string\">\"pencil\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                actionButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"cancel\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"cancel\"</span><span class=\"token punctuation\">,</span> icon <span class=\"token operator\">=</span> icon<span class=\"token punctuation\">(</span><span class=\"token string\">\"times\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                actionButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"save\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"save\"</span><span class=\"token punctuation\">,</span> icon <span class=\"token operator\">=</span> icon<span class=\"token punctuation\">(</span><span class=\"token string\">\"save\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                actionButton<span class=\"token punctuation\">(</span><span class=\"token string\">\"refresh\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"refresh\"</span><span class=\"token punctuation\">,</span> icon <span class=\"token operator\">=</span> icon<span class=\"token punctuation\">(</span><span class=\"token string\">\"refresh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                \n                <span class=\"token comment\"># modal: confirm changes</span>\n                bsModal<span class=\"token punctuation\">(</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"saveChanges\"</span><span class=\"token punctuation\">,</span> \n                        title <span class=\"token operator\">=</span> <span class=\"token string\">\"Do you want to save changes?\"</span><span class=\"token punctuation\">,</span>\n                        trigger <span class=\"token operator\">=</span>  <span class=\"token string\">\"save\"</span><span class=\"token punctuation\">,</span> \n                        size <span class=\"token operator\">=</span> <span class=\"token string\">\"small\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token comment\"># text + buttons</span>\n                        wellPanel<span class=\"token punctuation\">(</span>\n                            helpText<span class=\"token punctuation\">(</span><span class=\"token string\">\"Saving will overwrite existing data! This cannot be undone.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            actionButton<span class=\"token punctuation\">(</span>inputId <span class=\"token operator\">=</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span>  <span class=\"token string\">\"No\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            actionButton<span class=\"token punctuation\">(</span>inputId <span class=\"token operator\">=</span> <span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token string\">\"Yes\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                \n                <span class=\"token comment\"># modal: notification</span>\n                bsModal<span class=\"token punctuation\">(</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"okay\"</span><span class=\"token punctuation\">,</span> \n                        title <span class=\"token operator\">=</span> <span class=\"token string\">\"Save was successful!\"</span><span class=\"token punctuation\">,</span> \n                        trigger <span class=\"token operator\">=</span> <span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">,</span> \n                        size <span class=\"token operator\">=</span> <span class=\"token string\">\"small\"</span><span class=\"token punctuation\">,</span>\n                        \n                        <span class=\"token comment\"># notification</span>\n                        wellPanel<span class=\"token punctuation\">(</span>\n                                helpText<span class=\"token punctuation\">(</span><span class=\"token string\">\"Changes were saved successfully. Refresh the page for changes to take effect.\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                \n            <span class=\"token comment\"># main panel</span>\n            mainPanel<span class=\"token punctuation\">(</span>\n                                    \n                <span class=\"token comment\"># orientation text: current mode - view vs edit</span>\n                uiOutput<span class=\"token punctuation\">(</span><span class=\"token string\">\"helperText\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                hr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    \n                <span class=\"token comment\"># table outputs</span>\n                dataTableOutput<span class=\"token punctuation\">(</span><span class=\"token string\">\"table\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                rHandsontableOutput<span class=\"token punctuation\">(</span><span class=\"token string\">\"hot\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now let's move over to the server.</p>\n<h3>Building the server</h3>\n<p>Let's set the defaults. In our app, we've created a helperText\nelement that will allow us to pass messages to the UI. This is useful\nfor letting the user know which mode they are currently in (e.g., view\nor edit). We will set a default message to view. We will also set\nthe default dataTableOutput to render our dataset as is. Also by\ndefault, we will hide the cancel, save, and refresh buttons\nas these buttons are only necessary in editing mode. There are also\na few events for showing and hiding buttons. I won't go into detail in\nthis guide. The source code is self explanatory.</p>\n<p>The most important default is preparing an object to process the changes\nfrom the editing mode. We will create a reactiveValue object and call it\nvalues. Here's what our server setup looks like when we put in all\nof the default parameters. We will set up the observeEvents for all of\nthe buttons. Also we will also define the logic for loading in the\ndataset.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># logic for loading data file using mtcars</span>\ntestFile <span class=\"token operator\">&lt;-</span> <span class=\"token string\">\"cars_data.rds\"</span>\n\n\n<span class=\"token comment\"># if our data file exists, otherwise create it!</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file.exists<span class=\"token punctuation\">(</span>testFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    mtcarsDF <span class=\"token operator\">&lt;-</span> readRDS<span class=\"token punctuation\">(</span><span class=\"token string\">\"cars_data.rds\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    mtcarsDF <span class=\"token operator\">&lt;-</span> mtcars\n    row.names<span class=\"token punctuation\">(</span>mtcarsDF<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">NULL</span>\n    mtcarsDF<span class=\"token operator\">$</span>car <span class=\"token operator\">&lt;-</span> row.names<span class=\"token punctuation\">(</span>mtcars<span class=\"token punctuation\">)</span>\n    mtcarsDF <span class=\"token operator\">&lt;-</span> mtcarsDF<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\"># server </span>\nserver <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\"># orientation text: mode - view vs edit</span>\n    output<span class=\"token operator\">$</span>helperText <span class=\"token operator\">&lt;-</span> renderUI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        h3<span class=\"token punctuation\">(</span><span class=\"token string\">\"View Mode\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                                \n    <span class=\"token comment\"># datatable: view</span>\n    output<span class=\"token operator\">$</span>table <span class=\"token operator\">&lt;-</span> DT<span class=\"token operator\">::</span>renderDataTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        DT<span class=\"token operator\">::</span>datatable<span class=\"token punctuation\">(</span>mtcarsDF<span class=\"token punctuation\">,</span> selection <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                                \n    <span class=\"token comment\"># initiate values for edits</span>\n    values <span class=\"token operator\">=</span> reactiveValues<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># refresh page</span>\n    observeEvent<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>refresh<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        js<span class=\"token operator\">$</span>refresh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># if view or cancel is clicked, go back to default view</span>\n    observeEvent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>input<span class=\"token operator\">$</span>view input<span class=\"token operator\">$</span>cancel<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token ellipsis\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># switch to editing mode</span>\n    observeEvent<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>edit<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token ellipsis\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># save changes</span>\n    observeEvent<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>yes<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n        <span class=\"token ellipsis\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The events for view, cancel, and refresh are pretty straightforward.\nThese events show and hide buttons, as well refresh the view. Let's\nfocus on the events for editing and saving</p>\n<h3>Editing Mode</h3>\n<p>When the user clicks the edit button, the displayed table switches to an\nrhandsontable output. The following code allows us to make changes and\ndirectly render the changes in the ui. It also stores the changes into\nour reactive object values.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">observeEvent<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>edit<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token ellipsis\">...</span>\n\n    <span class=\"token comment\"># make data.frame of edits</span>\n    data <span class=\"token operator\">&lt;-</span> reactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.null<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>hot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            DF <span class=\"token operator\">&lt;-</span> hot_to_r<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>hot<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>is.null<span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                DF <span class=\"token operator\">&lt;-</span> data.frame<span class=\"token punctuation\">(</span>mtcarsDF<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                DF <span class=\"token operator\">&lt;-</span> values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n                            \n        values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DF\n        DF\n                            \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                        \n    <span class=\"token comment\"># render table</span>\n    output<span class=\"token operator\">$</span>hot <span class=\"token operator\">&lt;-</span> renderRHandsontable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        DF <span class=\"token operator\">=</span> data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is.null<span class=\"token punctuation\">(</span>DF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            rhandsontable<span class=\"token punctuation\">(</span>DF<span class=\"token punctuation\">,</span> stretchH <span class=\"token operator\">=</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Saving Changes</h3>\n<p>In this app, we've defined the save process as:</p>\n<ol>\n<li>Create a backup of the master file we will rename our current\nmaster file to include a timestamp (the time the save event was\ntriggered).</li>\n<li>Create a new master file: Now that we've created a backup of\nour master, we can now create a new master file that includes all of\nthe changes we made. The present method saves the changes to a\n.RDS file. Alternatively, you can write the changes to csv or\nyour preferred place (e.g., googlesheets, mongoDB, etc.).</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># When yes is clicked, save data as RDS</span>\nobserveEvent<span class=\"token punctuation\">(</span>input<span class=\"token operator\">$</span>save<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n                        \n    finalDF <span class=\"token operator\">&lt;-</span> isolate<span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># write data + backup current version</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file.exists<span class=\"token punctuation\">(</span><span class=\"token string\">\"cars_data.RDS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        \n        <span class=\"token comment\"># rename current master file</span>\n        file.rename<span class=\"token punctuation\">(</span>\n            from <span class=\"token operator\">=</span> <span class=\"token string\">\"cars_data.RDS\"</span><span class=\"token punctuation\">,</span>\n            to <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span><span class=\"token string\">\"cars_data_\"</span><span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%Y%m%d-%H%M%S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\".RDS\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n                        \n        <span class=\"token comment\"># write edits to file</span>\n        saveRDS<span class=\"token punctuation\">(</span>mtcarsDF<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> <span class=\"token string\">\"cars_data.RDS\"</span><span class=\"token punctuation\">)</span>\n                        \n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    \n        <span class=\"token comment\"># save data if a master file isn't present</span>\n        saveRDS<span class=\"token punctuation\">(</span>mtcarsDF<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> <span class=\"token string\">\"cars_data.RDS\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Once the save event runs, the user will receive a notification saying\nthat the file was saved and will inform the user to refresh the page.\nWhen the page is refreshed, the master file will be reloaded and the\nprevious version will be uneffected. Creating backups is a good way to\ntrack changes in the data. The timestamp is formated to:\nyyyymmdd-HHMMSS. Seconds may not be necessary in all cases; adjust as\nrequired.</p>\n<span id=\"data-editor-run\" />\n<h2>How can I run the demo? {#data-editor-run}</h2>\n<p>The source code is available on\n<a href=\"https://github.com/davidruvolo51/shinyAppTutorials/tree/master/Data-Editor\">github</a>.\nAlternatively, you can run the demo in R using the following code.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># Run in R/Rstudio</span>\ninstall.packages<span class=\"token punctuation\">(</span><span class=\"token string\">\"shiny\"</span><span class=\"token punctuation\">)</span>\nshiny<span class=\"token operator\">::</span>runGitHub<span class=\"token punctuation\">(</span>repo<span class=\"token operator\">=</span><span class=\"token string\">\"shinyAppTutorials\"</span><span class=\"token punctuation\">,</span>username<span class=\"token operator\">=</span><span class=\"token string\">\"davidruvolo51\"</span><span class=\"token punctuation\">,</span>subdir<span class=\"token operator\">=</span><span class=\"token string\">\"Data-Editor\"</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Data Editor","subtitle":"A shiny app for editing data in a shiny app","abstract":"Have you ever wanted to edit data in a shiny app? Learn how to build a shiny app for editing data and saving changes to file, and then reloading the changes into your app.","date":"2018-03-01","keywords":["rhandsontable"],"image":"https://images.unsplash.com/photo-1488998427799-e3362cec87c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80","imageAlt":"a notepad, pencil, glases, a phone, and a computer on top of a desk"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/data-editor/"}}