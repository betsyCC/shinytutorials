{"data":{"markdownRemark":{"html":"<h2>Contents</h2>\n<ol>\n<li><a href=\"#about\">Why would I need this?</a></li>\n<li><a href=\"#work\">How does it work?</a>\n- <a href=\"#work-notwork\">Why doesn't this work in the first place</a>\n- <a href=\"#work-ui\">Preparing our UI</a>\n- <a href=\"#work-js\">Using JavaScript</a>\n-</li>\n<li><a href=\"#issues\">Are there any issues?</a></li>\n<li><a href=\"#run\">How do I run the demo?</a></li>\n<li><a href=\"#next\">What's next?</a></li>\n</ol>\n<span id=\"about\" />\n<h2>Why would I need this?</h2>\n<p>Creating links to other pages in shiny apps isn't straight forward as it might seem. If you are here, you probably tried something like...</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># using tags</span>\ntags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"mypage\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to My Page\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>...but it didn't work. In this tutorial, we use javascript way to create links to other pages.</p>\n<p>Let's get started!</p>\n<span id=\"work\" />\n<h2>How does the app work?</h2>\n<p>To get the app up and running, this tutorial will cover a few things</p>\n<ol>\n<li>Why doesn't it work in the first place?</li>\n<li>Preparing our UI</li>\n<li>Using JavaScript\n...</li>\n</ol>\n<h3>Why doesn't it work in the first place?</h3>\n<p>Traditionally, web links are created by using the <code>&#x3C;a></code> element, also known as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\">anchor element</a>. This element is used to create links to other pages, sections in a page, files, and more. Setting the target location can be done by using the attribute <code>href</code>. In shiny, it's written differently:</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"somelocation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>However, this approach will not work as every time a shiny app is launched, the values for the href attribute in the &#x3C;a> element(s) are regenerated. This makes traditional hyperlink calls (as displayed above) impossible. One way is to work with <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">data attributes</a>.</p>\n<h3>Preparing our UI</h3>\n<p>In this example, I'll be using the page layout navbarPage and tabPanel. Let's take a look at tabPanel. As written on the shiny reference page for <a href=\"https://shiny.rstudio.com/reference/shiny/latest/tabPanel.html\">tabPanel</a>, tabPanel has the following arguments.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># tabPanel function</span>\ntabPanel<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> <span class=\"token ellipsis\">...</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>title<span class=\"token punctuation\">,</span> icon<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The argument title receives the name of the tab. By default, the argument value is assigned the value given to title. Using a little bit of javascript, we can create a custom function that receives a user-defined destination and searches the information in value in order to find the tab with the matching destination.</p>\n<p>It's important to note that even though value receives the values from title by default, it is good practice to assign shorter names to value to avoid matching errors. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># tabPanel function</span>\ntabPanel<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"My super duper cool home page\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>When shiny apps are launched, value is assigned the attribute <code>data-value``. Using a little bit of javascript, we can use</code>data-value<code></code> instead of <code>href</code>.</p>\n<h3>Create Javascript function</h3>\n<p>The following function loops through all the values in the data-value to\nlook for the desired tab (adapted code from this <a href=\"https://stackoverflow.com/questions/36412407/shiny-add-link-to-another-tabpanel-in-another-tabpanel\">SO\nquestion</a>).\nWhen a match is found, simulate a mouse click using click (this will\nadvance the screen to the desired tab).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># js file\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">customHref</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>tabName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> dropdownList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"value\"</span><span class=\"token operator\">></span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dropdownList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> dropdownList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-value\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> tabName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Using the home page we defined earlier, the custom link would look like\nthis:</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># using tags with js function</span>\ntags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('home')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to home page\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>What this is saying is: 1) find me all elements with data-values and return the values, 2) using the destination I defined, find a match in those values, and 3) when a match is found, move to that tab.</p>\n<h3>Setup ui.R (or app.R) file</h3>\n<p>You can either place this at the top of the UI or store in a separate file and load using includeScript or tags$script. In this example, I placed the function in a separate file and reading it in using tags$script(src=...).</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R or app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"func.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                <span class=\"token ellipsis\">...</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Create tabPanels and assign each one a unique value</h3>\n<p>Next, set up your tabs and give a unique name to the argument value.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R/app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"func.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 1\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 2\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 3\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab3\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>   </code></pre></div>\n<h3>Define the links</h3>\n<p>In one or all the panels, make a custom link using tags$a(). We\nwill also setup a blank shiny server.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R/app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"func.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 1\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab2')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the second tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 2\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab2\"</span><span class=\"token punctuation\">,</span>\n                    tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab3')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the third tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 3\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab3\"</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab1')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the first tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># server</span>\nserver <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now our app is ready to go. Launch the app and click on the links we\nsetup.</p>\n<span id=\"issues\" />\n<h2>Are there any issues?</h2>\n<p>Yes. If using bootstrap layouts, this does cause the navigation bar to remain open on smaller devices after a link is clicked. To my knowledge, there isn't a solution for this for shiny users.</p>\n<span id=\"run\" />\n<h2>How can I run this app?</h2>\n<p>The source code is available on <a href=\"https://github.com/davidruvolo51/shinyAppTutorials/tree/master/Internal-Links-Basic-Ex\">github</a>. Alternatively, you can run the demo in R using the following code.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># Run in R/Rstudio</span>\ninstall.packages<span class=\"token punctuation\">(</span><span class=\"token string\">\"shiny\"</span><span class=\"token punctuation\">)</span>\nshiny<span class=\"token operator\">::</span>runGitHub<span class=\"token punctuation\">(</span>repo<span class=\"token operator\">=</span><span class=\"token string\">\"shinyAppTutorials\"</span><span class=\"token punctuation\">,</span>username<span class=\"token operator\">=</span><span class=\"token string\">\"davidruvolo51\"</span><span class=\"token punctuation\">,</span>subdir<span class=\"token operator\">=</span><span class=\"token string\">\"Internal-Links-Basic-Ex\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<span id=\"next\" />\n<h2>What's next?</h2>\n<p>Check out <a href=\"../internal-links-b/\">part 2</a> of this series.</p>","frontmatter":{"title":"Linking Tabs - Part 1","subtitle":"Creating Links to Other Pages in a Shiny App","abstract":"Creating links to other pages in your shiny app can be challenging as ids are overwritten each time a shiny app launches. Instead, we will learn how to create new links using javascript.","date":"2018-03-05","updated":"2019-10-25","keywords":["javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/internal-links-a/"}}