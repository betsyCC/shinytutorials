{"data":{"markdownRemark":{"html":"<h2>Contents</h2>\n<ol>\n<li><a href=\"#about\">Why would I need this?</a></li>\n<li><a href=\"#work\">How does it work?</a>\n- <a href=\"#work-notwork\">Why doesn't this work in the first place</a>\n- <a href=\"#work-ui\">Preparing our UI</a>\n- <a href=\"#work-js\">Using JavaScript</a>\n-</li>\n<li><a href=\"#issues\">Are there any issues?</a></li>\n<li><a href=\"#run\">How do I run the demo?</a></li>\n<li><a href=\"#next\">What's next?</a></li>\n</ol>\n<span id=\"about\" />\n<h2>Why would I need this?</h2>\n<p>Creating links to other pages in shiny apps isn't straight forward as it might seem. If you are here, you probably tried something like...</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># using tags</span>\ntags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"mypage\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to My Page\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>...but it didn't work. In this tutorial, we use javascript way to create links to other pages.</p>\n<p>Let's get started!</p>\n<span id=\"work\" />\n<h2>How does the app work?</h2>\n<p>To get the app up and running, this tutorial will cover a few things</p>\n<ol>\n<li>Why doesn't it work in the first place?</li>\n<li>Preparing our UI</li>\n<li>Using JavaScript\n...</li>\n</ol>\n<h3>Why doesn't it work in the first place?</h3>\n<p>Traditionally, web links are created by using the <code>&#x3C;a></code> element, also known as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\">anchor element</a>. This element is used to create links to other pages, sections in a page, files, and more. Setting the target location can be done by using the attribute <code>href</code>. There are other attributes available, but I won't go through them here (see the anchor element docs for more info).</p>\n<p>Let's say we have a page in our app called <code>data/</code> and we want to create a link to it from another page. In shiny, we would write i like so.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\">tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"data/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Go to Data Page\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>However, this approach will not work for internal pages. Every time a shiny app is launched, behind the scences it is rendering new keys and injecting them into the href attribute of all <code>&#x3C;a></code> element(s) (I'm not sure 100% why shiny does this, but it's likely to do with how shiny renders pages and links them internally). This makes traditional hyperlink calls (as displayed above) impossible. We can get around this. One way is to work with data attributes.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">Data attributes</a> allow us to attach custom data to html elements. As long as we prefix our attributes with <code>data-</code>, we can enter anything we want. This is useful as we can access this information in javascript and run functions using this data. To get our links working, we will take advantage of the <code>data-*</code> attribute(s) and create a work around for creating links to other tabs.</p>\n<h3>Preparing our UI</h3>\n<p>In this example, I'll be using the page layout navbarPage and tabPanel. Let's set up our project. We will create a single file app, create the <code>www</code> and <code>js</code> director, and create a javascript file.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># in r</span>\nfile.create<span class=\"token punctuation\">(</span><span class=\"token string\">\"app.R\"</span><span class=\"token punctuation\">)</span>\ndir.create<span class=\"token punctuation\">(</span><span class=\"token string\">\"www\"</span><span class=\"token punctuation\">)</span>\ndir.create<span class=\"token punctuation\">(</span><span class=\"token string\">\"www/js\"</span><span class=\"token punctuation\">)</span>\nfile.create<span class=\"token punctuation\">(</span><span class=\"token string\">\"www/js/index.js\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now open up the <code>app.R</code> file. We will start creating the structure of our ui. We will use the <code>tagList</code> function to load our javascript file. We will also set the ui layout to <code>navbarPage</code>. Here's the basic structure for our app</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R or app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"js/index.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                <span class=\"token comment\"># do something here</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Let's take a look at tabPanel. As written on the shiny reference page for <a href=\"https://shiny.rstudio.com/reference/shiny/latest/tabPanel.html\">tabPanel</a>, tabPanel has the following arguments.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># tabPanel function</span>\ntabPanel<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> <span class=\"token ellipsis\">...</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span>title<span class=\"token punctuation\">,</span> icon<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The argument title receives the name of the tab. By default, the argument value is assigned the value given to title. When the tab panel is rendered to html, it will write this out as <code>data-value=title</code>. Why is this important?</p>\n<p>Well, we can use this argument in a more useful way. Instead of the default action (writing the title), we can substitute a value that is unique to the page, such as an id. If we have ids, this will be more useful. Using a little bit of javascript, we can create a function that searches all tabs that has the id that we want, and then \"moves\" to that tab.</p>\n<p>Let's take a look at example. Suppose we have a tabpanel titled, \"My Home Page\". </p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># tabPanel function</span>\ntabPanel<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"My home page\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>It's important to note that even though value receives the values from title by default, it is good practice to assign shorter names to value to avoid matching errors. For example:</p>\n<p>When shiny apps are launched, value is assigned the attribute <code>data-value``. Using a little bit of javascript, we can use</code>data-value<code></code> instead of <code>href</code>.</p>\n<h3>Create Javascript function</h3>\n<p>The following function loops through all the values in the data-value to\nlook for the desired tab (adapted code from this <a href=\"https://stackoverflow.com/questions/36412407/shiny-add-link-to-another-tabpanel-in-another-tabpanel\">SO\nquestion</a>).\nWhen a match is found, simulate a mouse click using click (this will\nadvance the screen to the desired tab).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># js file\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">customHref</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>tabName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> dropdownList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"value\"</span><span class=\"token operator\">></span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dropdownList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> dropdownList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-value\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> tabName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Using the home page we defined earlier, the custom link would look like\nthis:</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># using tags with js function</span>\ntags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('home')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to home page\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>What this is saying is: 1) find me all elements with data-values and return the values, 2) using the destination I defined, find a match in those values, and 3) when a match is found, move to that tab.</p>\n<h3>Create tabPanels and assign each one a unique value</h3>\n<p>Next, set up your tabs and give a unique name to the argument value.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R/app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"func.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 1\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 2\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 3\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab3\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>   </code></pre></div>\n<h3>Define the links</h3>\n<p>In one or all the panels, make a custom link using tags$a(). We\nwill also setup a blank shiny server.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># ui.R/app.R</span>\nui <span class=\"token operator\">&lt;-</span> tagList<span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># head</span>\n        tags<span class=\"token operator\">$</span>head<span class=\"token punctuation\">(</span>\n                tags<span class=\"token operator\">$</span>script<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"func.js\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\"># ui</span>\n        navbarPage<span class=\"token punctuation\">(</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 1\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab1\"</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab2')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the second tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 2\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab2\"</span><span class=\"token punctuation\">,</span>\n                    tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab3')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the third tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                tabPanel<span class=\"token punctuation\">(</span><span class=\"token string\">\"tab 3\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"tab3\"</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>h1<span class=\"token punctuation\">(</span><span class=\"token string\">\"Some Title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tags<span class=\"token operator\">$</span>a<span class=\"token punctuation\">(</span><span class=\"token string\">\"onclick\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"customHref('tab1')\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Go to the first tab\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># server</span>\nserver <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now our app is ready to go. Launch the app and click on the links we\nsetup.</p>\n<span id=\"issues\" />\n<h2>Are there any issues?</h2>\n<p>Yes. If using bootstrap layouts, this does cause the navigation bar to remain open on smaller devices after a link is clicked. To my knowledge, there isn't a solution for this for shiny users.</p>\n<span id=\"run\" />\n<h2>How can I run this app?</h2>\n<p>The source code is available on <a href=\"https://github.com/davidruvolo51/shinyAppTutorials/tree/master/Internal-Links-Basic-Ex\">github</a>. Alternatively, you can run the demo in R using the following code.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># Run in R/Rstudio</span>\ninstall.packages<span class=\"token punctuation\">(</span><span class=\"token string\">\"shiny\"</span><span class=\"token punctuation\">)</span>\nshiny<span class=\"token operator\">::</span>runGitHub<span class=\"token punctuation\">(</span>repo<span class=\"token operator\">=</span><span class=\"token string\">\"shinyAppTutorials\"</span><span class=\"token punctuation\">,</span>username<span class=\"token operator\">=</span><span class=\"token string\">\"davidruvolo51\"</span><span class=\"token punctuation\">,</span>subdir<span class=\"token operator\">=</span><span class=\"token string\">\"Internal-Links-Basic-Ex\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<span id=\"next\" />\n<h2>What's next?</h2>\n<p>Check out <a href=\"../internal-links-b/\">part 2</a> of this series.</p>","frontmatter":{"title":"Linking Tabs - Part 1","subtitle":"Creating Links to Other Pages in a Shiny App","abstract":"Creating links to other pages in your shiny app can be challenging as ids are overwritten each time a shiny app launches. Instead, we will learn how to create new links using javascript.","date":"2018-03-05","updated":"2019-10-25","keywords":["javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/internal-links-a/"}}